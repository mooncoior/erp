<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.naver.erp.ExamDAO">

<insert id="insertExamInfo" parameterType="com.naver.erp.ExamDTO" >
      insert into exam (
           exam_id
           , exam_name
           , exam_date
           , tea_id
      ) values( 
      (select (nvl(max(exam_id),0)+1) from exam)
         ,#{exam_name}
         ,to_date(#{exam_date},'yyyy-mm-dd')
         ,#{tea_id}
       )
   </insert> 


<insert id="examproblem" parameterType="com.naver.erp.ExamDTO">
    INSERT ALL
    INTO examproblem (exam_no, exam_question, exam_answer, exam_id)
    SELECT
        (select (nvl(max(exam_no),0)+1) from examproblem),
        #{exam_question1}, #{exam_answer1},
        (select exam_id from exam where exam_name=#{exam_name} and exam_date=to_date(#{exam_date}, 'yyyy-mm-dd'))
    FROM DUAL
    UNION ALL
    SELECT
        (select (nvl(max(exam_no),0)+2) from examproblem),
        #{exam_question2}, #{exam_answer2},
        (select exam_id from exam where exam_name=#{exam_name} and exam_date=to_date(#{exam_date}, 'yyyy-mm-dd'))
    FROM DUAL
    UNION ALL
    SELECT
        (select (nvl(max(exam_no),0)+3) from examproblem),
        #{exam_question3}, #{exam_answer3},
        (select exam_id from exam where exam_name=#{exam_name} and exam_date=to_date(#{exam_date}, 'yyyy-mm-dd'))
    FROM DUAL
    UNION ALL
    SELECT
        (select (nvl(max(exam_no),0)+4) from examproblem),
        #{exam_question4}, #{exam_answer4},
        (select exam_id from exam where exam_name=#{exam_name} and exam_date=to_date(#{exam_date}, 'yyyy-mm-dd'))
    FROM DUAL
    UNION ALL
    SELECT
        (select (nvl(max(exam_no),0)+5) from examproblem),
        #{exam_question5}, #{exam_answer5},
        (select exam_id from exam where exam_name=#{exam_name} and exam_date=to_date(#{exam_date}, 'yyyy-mm-dd'))
    FROM DUAL
    UNION ALL
    SELECT
        (select (nvl(max(exam_no),0)+6) from examproblem),
        #{exam_question6}, #{exam_answer6},
        (select exam_id from exam where exam_name=#{exam_name} and exam_date=to_date(#{exam_date}, 'yyyy-mm-dd'))
    FROM DUAL
    UNION ALL
    SELECT
        (select (nvl(max(exam_no),0)+7) from examproblem),
        #{exam_question7}, #{exam_answer7},
        (select exam_id from exam where exam_name=#{exam_name} and exam_date=to_date(#{exam_date}, 'yyyy-mm-dd'))
    FROM DUAL
    UNION ALL
    SELECT
        (select (nvl(max(exam_no),0)+8) from examproblem),
        #{exam_question8}, #{exam_answer8},
        (select exam_id from exam where exam_name=#{exam_name} and exam_date=to_date(#{exam_date}, 'yyyy-mm-dd'))
    FROM DUAL
    UNION ALL
    SELECT
        (select (nvl(max(exam_no),0)+9) from examproblem),
        #{exam_question9}, #{exam_answer9},
        (select exam_id from exam where exam_name=#{exam_name} and exam_date=to_date(#{exam_date}, 'yyyy-mm-dd'))
    FROM DUAL
    UNION ALL
    SELECT
        (select (nvl(max(exam_no),0)+10) from examproblem),
        #{exam_question10}, #{exam_answer10},
        (select exam_id from exam where exam_name=#{exam_name} and exam_date=to_date(#{exam_date}, 'yyyy-mm-dd'))
    FROM DUAL
</insert>
   
<!-- <insert id="examresult" parameterType="com.naver.erp.ExamDTO">
		insert into examresult (
		exam_id
		, stu_id
		, score
		) values ( (select exam_id from exam where exam_id=#{exam_id})
		, #{stu_id}
		, #{score}
		)
	</insert> -->
	   
   <update id="updateExamInfo" parameterType="com.naver.erp.ExamDTO">
   update
   		EXAM
   set 
           exam_name = #{exam_name}
           , exam_date = to_date(#{exam_date}, 'yyyy-mm-dd')
      where exam_id = ${exam_id}
   </update>
   
   <update id="updateExamproblem" parameterType="com.naver.erp.ExamDTO">
    UPDATE examproblem
    SET
        exam_question = #{exam_question1},
        exam_answer = #{exam_answer1}
    WHERE exam_id = ${exam_id} AND exam_no = (SELECT MAX(exam_no)+1 FROM examproblem);
	</update>
	
	   <update id="updateExamproblem" parameterType="com.naver.erp.ExamDTO">
    UPDATE examproblem
    SET
        exam_question = #{exam_question2},
        exam_answer = #{exam_answer2}
    WHERE exam_id = ${exam_id} AND exam_no = (SELECT MAX(exam_no)+2 FROM examproblem);
	</update>
	
	<update id="updateExamproblem" parameterType="com.naver.erp.ExamDTO">
    UPDATE examproblem
    SET
        exam_question = #{exam_question3},
        exam_answer = #{exam_answer3}
    WHERE exam_id = ${exam_id} AND exam_no = (SELECT MAX(exam_no)+3 FROM examproblem);
	</update>
	
	<update id="updateExamproblem" parameterType="com.naver.erp.ExamDTO">
    UPDATE examproblem
    SET
        exam_question = #{exam_question4},
        exam_answer = #{exam_answer4}
    WHERE exam_id = ${exam_id} AND exam_no = (SELECT MAX(exam_no)+4 FROM examproblem);
	</update>
	
	<update id="updateExamproblem" parameterType="com.naver.erp.ExamDTO">
    UPDATE examproblem
    SET
        exam_question = #{exam_question5},
        exam_answer = #{exam_answer5}
    WHERE exam_id = ${exam_id} AND exam_no = (SELECT MAX(exam_no)+5 FROM examproblem);
	</update>
	
	<update id="updateExamproblem" parameterType="com.naver.erp.ExamDTO">
    UPDATE examproblem
    SET
        exam_question = #{exam_question6},
        exam_answer = #{exam_answer6}
    WHERE exam_id = ${exam_id} AND exam_no = (SELECT MAX(exam_no)+6 FROM examproblem);
	</update>
	
	<update id="updateExamproblem" parameterType="com.naver.erp.ExamDTO">
    UPDATE examproblem
    SET
        exam_question = #{exam_question7},
        exam_answer = #{exam_answer7}
    WHERE exam_id = ${exam_id} AND exam_no = (SELECT MAX(exam_no)+7 FROM examproblem);
	</update>
	
	<update id="updateExamproblem" parameterType="com.naver.erp.ExamDTO">
    UPDATE examproblem
    SET
        exam_question = #{exam_question8},
        exam_answer = #{exam_answer8}
    WHERE exam_id = ${exam_id} AND exam_no = (SELECT MAX(exam_no)+8 FROM examproblem);
	</update>
	
	<update id="updateExamproblem" parameterType="com.naver.erp.ExamDTO">
    UPDATE examproblem
    SET
        exam_question = #{exam_question9},
        exam_answer = #{exam_answer9}
    WHERE exam_id = ${exam_id} AND exam_no = (SELECT MAX(exam_no)+9 FROM examproblem);
	</update>
	
	<update id="updateExamproblem" parameterType="com.naver.erp.ExamDTO">
    UPDATE examproblem
    SET
        exam_question = #{exam_question10},
        exam_answer = #{exam_answer10}
    WHERE exam_id = ${exam_id} AND exam_no = (SELECT MAX(exam_no)+10 FROM examproblem);
	</update>
	
    <delete id="deleteExamInfo" parameterType="com.naver.erp.ExamDTO">
    	delete from exam where exam_id = ${exam_id}
    </delete>
    
	
   <select id="getExamListCnt" resultType="int" >
	     select
	       count(*)
	          from exam
	          where 1=1
	          
          </select> 
     <select id="getExamListCntAll" resultType="int" >
	     select
	       count(*)
	          from exam
          </select>
          
	  <select id="getExamList" resultType="java.util.Map" >
	     select
	       
	           exam_id                           "exam_id"
	         , exam_name                        "exam_name"
	          ,(to_date(exam_date,'yyyy-mm-dd'))                "exam_date"
	          , (select tea_name from teacher t where e.tea_id = t.tea_id)       "tea_id"

	          from exam e
	          where 1=1
	  
          </select> 
      
      <select id="getExamDetailInfo" parameterType="int" resultType="com.naver.erp.ExamDTO">
      select
      	exam_id			"exam_id"
      	, exam_name		"exam_name"
      	, to_char(exam_date,'yyyy-mm-dd')			"exam_date"
      	, (select tea_name from teacher t where e.tea_id = t.tea_id)       "tea_id"
      	,   (
           SELECT eq.exam_question1 FROM
            (SELECT 
              x.eid,
              LISTAGG(exam_question1, ', ')
              WITHIN GROUP(ORDER BY exam_question1) exam_question1
              FROM
               (
                 SELECT EXAM_ID eid, exam_question as exam_question1 FROM examproblem UNION
                 SELECT EXAM_ID, exam_question FROM examproblem
               ) x
               GROUP BY eid
               ) eq
              WHERE e.EXAM_ID = eq.eid
            ) "exam_question1"
      from exam e
      	where exam_id = ${exam_id}
      </select>
      
      <select id="getExamDetailInfo" parameterType="int" resultType="com.naver.erp.ExamDTO">
      select
      	exam_question		"exam_question"
      	, exam_answer		"exam_answer"
      	from examproblem
      	where exam_id = ${exam_id}
      </select>
      

</mapper>
